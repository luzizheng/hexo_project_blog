{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/quiet/source/css/about.css","path":"css/about.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/archive.css","path":"css/archive.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/atom-one-dark.css","path":"css/atom-one-dark.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/categories.css","path":"css/categories.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/food.css","path":"css/food.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/header.css","path":"css/header.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/home.css","path":"css/home.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/links.css","path":"css/links.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/page.css","path":"css/page.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/page_cente.css","path":"css/page_cente.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/tag.css","path":"css/tag.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/css/tags.css","path":"css/tags.css","modified":0,"renderable":1},{"_id":"themes/quiet/source/image/favicon.ico","path":"image/favicon.ico","modified":0,"renderable":1},{"_id":"themes/quiet/source/image/pattern.png","path":"image/pattern.png","modified":0,"renderable":1},{"_id":"themes/quiet/source/js/gotop.js","path":"js/gotop.js","modified":0,"renderable":1},{"_id":"themes/quiet/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"69f36c2f4f08337b06fadb6461b3239993840f2f","modified":1638195462702},{"_id":"source/_posts/financial001.md","hash":"3981be5525490871de6b5fa70fece8eee0ce52d2","modified":1638195462703},{"_id":"source/_posts/music001.md","hash":"bd451d73ee3298243a5030108cec453e5665d164","modified":1638195462704},{"_id":"source/_posts/imageTub.md","hash":"826a39b7af072ede28ccfbf9bce1bd2d424a5688","modified":1638195462703},{"_id":"source/about/index.md","hash":"ce0d252ecaf6c3388a23e3c46ef2a961a7de7365","modified":1638195462704},{"_id":"source/tags/index.md","hash":"d28d8b26fbd26619041bd209f95a4aa22dc5b053","modified":1638195462705},{"_id":"source/categories/index.md","hash":"6bc4be4e73606c085a44bb3ab8654b25bce38929","modified":1638195462704},{"_id":"source/.DS_Store","hash":"738f8c91613b017dc90db6b32631a3c7d0ecb595","modified":1637937074223},{"_id":"source/_posts/.DS_Store","hash":"e6a76bc210ce61a064e157c0f0c71190074c0a56","modified":1637916822654},{"_id":"source/about/.DS_Store","hash":"34fe290bc8d934cf4c51deea76c7ec16f3cf4d2f","modified":1637918521047},{"_id":"themes/quiet/LICENSE","hash":"a0da6b64f5ac3c2be67e22af05669c299eaa8c84","modified":1638195462706},{"_id":"themes/quiet/README-EN.md","hash":"8a14c4a1b8880c1b389c18e832ba7e0437c6a480","modified":1638195462706},{"_id":"themes/quiet/_config.yml","hash":"69155da347a7e185e1d5dc842adcc58638baf696","modified":1638195872753},{"_id":"themes/quiet/README.md","hash":"029fba4d4abe72177ae38e103d49581428ec6575","modified":1638195462707},{"_id":"themes/quiet/layout/404.ejs","hash":"d24c2375e0e927085e6dbeb788fde5e119bcc9b8","modified":1638195462707},{"_id":"themes/quiet/.DS_Store","hash":"cc4dca834fbdb73ddb2dae21ddc0a50d33e01b0f","modified":1637906944273},{"_id":"themes/quiet/layout/about.ejs","hash":"10593ad8e4df308f2dd3343534b3f3e19005072a","modified":1638195462707},{"_id":"themes/quiet/layout/archive.ejs","hash":"3b4c69bfd0bd38e3089237383329a2d0d24c59a6","modified":1638195462707},{"_id":"themes/quiet/layout/.DS_Store","hash":"261cafe2273d4d4b11989cf1621ab22492351ea7","modified":1638163735212},{"_id":"themes/quiet/layout/index.ejs","hash":"b36963002a0fafb093db68c77eb0f2d0b5e7ded6","modified":1638195462707},{"_id":"themes/quiet/layout/layout.ejs","hash":"1de4d59c593645e3dd2f7953e3c4dda73606b8c3","modified":1638195462707},{"_id":"themes/quiet/layout/categories.ejs","hash":"bc3bb7a3276d6aa25b805e73addbea778c198605","modified":1638195462707},{"_id":"themes/quiet/layout/links.ejs","hash":"c1db6ee6b94ac0693926ba64c46d6ddd0cf18c69","modified":1638195462707},{"_id":"themes/quiet/layout/post.ejs","hash":"10c5eab4b9964b3565ab3ee3e793364032ec04da","modified":1638195462707},{"_id":"themes/quiet/layout/tag.ejs","hash":"1af8064b3b6affe6c43820303b299bc7bcdb453a","modified":1638195462707},{"_id":"themes/quiet/layout/tags.ejs","hash":"587bd14d96946c117b1ef6d2e612cd20e23b59ab","modified":1638195462707},{"_id":"themes/quiet/layout/_partial/foot.ejs","hash":"aac4947a45be9ac334f751177990ee00bb98292d","modified":1638195462707},{"_id":"themes/quiet/layout/_partial/head.ejs","hash":"d7536b46c02d8acba84d21b8ad62edefb7ce86da","modified":1638195462707},{"_id":"themes/quiet/layout/_partial/header.ejs","hash":"60f6d69505c64f628c9ace9325aa28950730852b","modified":1638195462707},{"_id":"themes/quiet/layout/_partial/home.ejs","hash":"094e3dc189406526d3934894cf0352b26ce28f13","modified":1638195462707},{"_id":"themes/quiet/source/.DS_Store","hash":"b965f4c644cc49b738414764bf2ce63c6ea28e9a","modified":1637906948496},{"_id":"themes/quiet/layout/_partial/.DS_Store","hash":"db62fbf1993ecd5d9e70a49a58be69ac7e7a4485","modified":1637903652374},{"_id":"themes/quiet/layout/_partial/post_centent.ejs","hash":"b6bb8b8e04433b37854e8c8df79c72de182f4496","modified":1638195462707},{"_id":"themes/quiet/layout/_partial/post_head.ejs","hash":"be2f5a2d0d91ddb529c0508183d57ad105fedefa","modified":1638195462707},{"_id":"themes/quiet/layout/_partial/post_pn.ejs","hash":"93edfb752224c5a6c3b59b3d3d5076454a6c3941","modified":1638195462707},{"_id":"themes/quiet/layout/_widget/analytics.ejs","hash":"c48c85b36c50cd18b018d0d3a08981dfb1a37bf5","modified":1638195462707},{"_id":"themes/quiet/layout/_widget/gotop.ejs","hash":"fdc070e8dbd81198bbd36cdf46e8b7c33ecdeaf0","modified":1638195462707},{"_id":"themes/quiet/layout/_widget/sidebar.ejs","hash":"1e60a534616fdcf97a4d61ef25648af263ffa6e1","modified":1638195462707},{"_id":"themes/quiet/layout/_widget/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1637903652376},{"_id":"themes/quiet/source/css/about.css","hash":"6b2c903e09f5f49304f16636437f37af89744a6c","modified":1638195462707},{"_id":"themes/quiet/source/css/archive.css","hash":"27a5ddd29f3eb078182354268332bc2521bf9287","modified":1638195462707},{"_id":"themes/quiet/source/css/atom-one-dark.css","hash":"c3e2c329a09062a1702f0f51639e2068a0799fe4","modified":1638195462707},{"_id":"themes/quiet/source/css/categories.css","hash":"29df7ef27a47c444c89ad25bf8809e3745023638","modified":1638195462707},{"_id":"themes/quiet/source/css/.DS_Store","hash":"75b22b6a020bdf7a452db2f4d29044b8a88a6661","modified":1637903652379},{"_id":"themes/quiet/source/css/food.css","hash":"621e5d62096d3d30645fe243e72e6596da6d9b9f","modified":1638195462707},{"_id":"themes/quiet/source/css/header.css","hash":"343245c15cbcfa10b2630d2449dba1ffd9a7307c","modified":1638195462707},{"_id":"themes/quiet/source/css/home.css","hash":"bf4d2d2441dbc3e5b6972e6cd7e2cbb76c87f27a","modified":1638195462707},{"_id":"themes/quiet/source/css/links.css","hash":"a64ac7a3c6601e268e4a0d63f72dde4ec205e15c","modified":1638195462707},{"_id":"themes/quiet/source/css/page.css","hash":"a0bd91029edec538700b28960e7be1639d5022f7","modified":1638195462707},{"_id":"themes/quiet/source/css/page_cente.css","hash":"4e8807c9d90c891590b39d1926f68cbcde0845f8","modified":1638199107834},{"_id":"themes/quiet/source/css/tag.css","hash":"27a5ddd29f3eb078182354268332bc2521bf9287","modified":1638195462707},{"_id":"themes/quiet/source/css/tags.css","hash":"dae1cad96ff86f6190b40876ed623a58532ca694","modified":1638195462707},{"_id":"themes/quiet/source/image/favicon.ico","hash":"ca525ee0a6cf176a5f07c600873fc04537108706","modified":1637906928549},{"_id":"themes/quiet/source/image/pattern.png","hash":"e9a79b9b5716c781e8f5acf3462e42fae7f39741","modified":1637903652383},{"_id":"themes/quiet/source/js/gotop.js","hash":"a1156c9b834d4e5a1685b20a53c1ced51fa9b895","modified":1638195462707},{"_id":"themes/quiet/source/image/.DS_Store","hash":"b506b58a8dd9bbfaaabecd10f07fe7b34568b0be","modified":1637907485406},{"_id":"themes/quiet/source/js/.DS_Store","hash":"0f43f1407d3b3df9e865a28f4c9ef13640ad739b","modified":1637903652383},{"_id":"themes/quiet/source/js/jquery.min.js","hash":"df984bad0779a28b76ab687de125ff1c7d56c231","modified":1638195462707},{"_id":"public/404/index.html","hash":"e8e33ab17fca2831add725ed485284ec8a4cffc7","modified":1638202516916},{"_id":"public/about/index.html","hash":"d5e0f743234eb0eea69488266835847661d6efd2","modified":1638202516916},{"_id":"public/tags/index.html","hash":"d26868a62a5abe8dc74523dff6d5d6862fa37083","modified":1638204482799},{"_id":"public/categories/index.html","hash":"c773fafb75ec6263a4ad123bfa5cdde1b8a67523","modified":1638202516916},{"_id":"public/2021/11/29/financial001/index.html","hash":"059a5621f4526dd5e5a11a592ea38e0bc285f46f","modified":1638202516916},{"_id":"public/2021/11/26/music001/index.html","hash":"39519223d8bc12b8d69f9e96fe7ef44254ae1c50","modified":1638202516916},{"_id":"public/archives/index.html","hash":"06f9c43009d012696a240517ed99178a1b637a92","modified":1638202516916},{"_id":"public/archives/2021/index.html","hash":"06f9c43009d012696a240517ed99178a1b637a92","modified":1638202516916},{"_id":"public/archives/2021/11/index.html","hash":"06f9c43009d012696a240517ed99178a1b637a92","modified":1638202516916},{"_id":"public/categories/小白理财/index.html","hash":"f6deec5b35a2f0cdb5c994c6267754f9ec0c8a0b","modified":1638202516916},{"_id":"public/categories/关于音乐/index.html","hash":"34a83760579902e8a6dc9b09b43016a0074d97de","modified":1638168404146},{"_id":"public/categories/我的Coding生涯/index.html","hash":"f6deec5b35a2f0cdb5c994c6267754f9ec0c8a0b","modified":1638202516916},{"_id":"public/index.html","hash":"c6db4aaded51ac7a495a4e97a8a6ff9d28b18e3f","modified":1638202516916},{"_id":"public/tags/理财/index.html","hash":"82ab34cbbca8654cfb344713a05bad0a27142e3e","modified":1638165936065},{"_id":"public/tags/音乐/index.html","hash":"1f0f0096b612fb92221e5ee254c244150e15f0de","modified":1638165936065},{"_id":"public/tags/吉他/index.html","hash":"05d2ec6759c0a0026a1ee40f655c1cb776978ee4","modified":1638202516916},{"_id":"public/tags/基本技巧/index.html","hash":"826a6f65ddbbd3c9ebdae8b84cec5ba3c3bb3ff3","modified":1638165936065},{"_id":"public/2021/11/26/imageTub/index.html","hash":"b3cc4154147c7065638f422655539ea0e2822a2d","modified":1638202516916},{"_id":"public/image/favicon.ico","hash":"ca525ee0a6cf176a5f07c600873fc04537108706","modified":1638152379773},{"_id":"public/image/pattern.png","hash":"e9a79b9b5716c781e8f5acf3462e42fae7f39741","modified":1638152379773},{"_id":"public/css/about.css","hash":"e5fc17a21040978220a540db04480bc94ae8bfca","modified":1638165540193},{"_id":"public/css/archive.css","hash":"2afce926ad57393113420679f21528b3da3fa3a6","modified":1638152379773},{"_id":"public/css/atom-one-dark.css","hash":"da8603ef348b38d6ef090fa9172a6521e53b6c89","modified":1638152379773},{"_id":"public/css/categories.css","hash":"d11d823c3e490a963f1a196b3cfa5ac095c8e017","modified":1638152379773},{"_id":"public/css/food.css","hash":"2bd4f000fab92f3135b252b90918125f7feabce0","modified":1638152379773},{"_id":"public/css/header.css","hash":"9ed9321a6111f93d3f979201c603be4895eb8a0e","modified":1638152379773},{"_id":"public/css/home.css","hash":"07c0b24d47425faa0bc102507ca01ef3c0b1db86","modified":1638152379773},{"_id":"public/css/links.css","hash":"c14856cb409618da6a201faf49687c36a0cf4105","modified":1638152379773},{"_id":"public/css/page.css","hash":"7d92c84d1b2abfdffa93efac1f048e1ac1d75366","modified":1638152379773},{"_id":"public/css/page_cente.css","hash":"e14bfd73de3cadff05b7ec5d12a266512a4be8b0","modified":1638202516916},{"_id":"public/css/tag.css","hash":"2afce926ad57393113420679f21528b3da3fa3a6","modified":1638152379773},{"_id":"public/css/tags.css","hash":"f04b3d9f3855711f3855242da6f93cae67215bc9","modified":1638152379773},{"_id":"public/js/gotop.js","hash":"3e817d1d6eb2d2199abf6fd97e9ffd1dccb2fe5b","modified":1638152379773},{"_id":"public/js/jquery.min.js","hash":"c2b424fe7ece6ee8356200aca48c60f22ed35b70","modified":1638152379773},{"_id":"source/links/index.md","hash":"9e1962094fdb51f8f223aad97e89271f5b343324","modified":1638195462705},{"_id":"public/links/index.html","hash":"61c442c662a8097a5ae8da04a63fb065fe0aa2a6","modified":1638202516916},{"_id":"source/_posts/game001.md","hash":"3d0816fb9f05c21c62c15b4608f6aa2d0bc2a3c4","modified":1638204366588},{"_id":"public/2021/11/26/game001/index.html","hash":"3492caa183f54610d31ad4dbea565c895ff12331","modified":1638204482799},{"_id":"public/categories/第九艺术探索/index.html","hash":"34a83760579902e8a6dc9b09b43016a0074d97de","modified":1638168404146},{"_id":"public/tags/游戏/index.html","hash":"8ce8d6537944e9624736322aa6084a19938df3cf","modified":1638168404146},{"_id":"public/categories/第九藝術探索/index.html","hash":"f6deec5b35a2f0cdb5c994c6267754f9ec0c8a0b","modified":1638202516916},{"_id":"public/categories/關於音樂/index.html","hash":"f6deec5b35a2f0cdb5c994c6267754f9ec0c8a0b","modified":1638202516916},{"_id":"public/tags/理財/index.html","hash":"f1db35adda31980249afaad4c7345af9350fcada","modified":1638202516916},{"_id":"public/tags/遊戲/index.html","hash":"b78916f4d0698b5745e55c1c79f98f5cbc864f12","modified":1638202516916},{"_id":"public/tags/音樂/index.html","hash":"9c1c6483f20d3f6508e67bfe42ca4cbc8ce6be74","modified":1638202516916},{"_id":"public/tags/程序員技術/index.html","hash":"0d085cf00563b7ded4501f15e4cf02496a03f806","modified":1638202516916}],"Category":[{"name":"小白理财","_id":"ckwk1mq2d0004wdcaafk57zbd"},{"name":"关于音乐","_id":"ckwk1mq2j0008wdca0t3x64si"},{"name":"我的Coding生涯","_id":"ckwk1mq2p000hwdcada660kmm"},{"name":"第九艺术探索","_id":"ckwkb66nx0001w2ca1apz6z7g"},{"name":"第九藝術探索","_id":"ckwkgm11x000261cact69d2u2"},{"name":"關於音樂","_id":"ckwkgm11z000461ca5lsb29pg"}],"Data":[],"Page":[{"title":"404","date":"2021-11-26T08:08:11.000Z","layout":"404","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2021-11-26 16:08:11\nlayout: 404\n---\n","updated":"2021-11-29T14:17:42.702Z","path":"404/index.html","_id":"ckwk1mq250000wdca7tinbsen","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"個人簡介","date":"2020-11-02T16:00:00.000Z","aubot":"我叫Luzz","portrait":"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/avatar.png","describe":"一個無聊的人，有時寫下代碼，有時彈下吉他，有時飲下喜茶...","type":"about","layout":"about","_content":"\n\n\n> Could we just stop talking and have a glass of Bach?","source":"about/index.md","raw":"---\ntitle: 個人簡介\ndate: 2020-11-03\naubot: 我叫Luzz\nportrait: 'https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/avatar.png'\ndescribe: '一個無聊的人，有時寫下代碼，有時彈下吉他，有時飲下喜茶...'\ntype: \"about\"\nlayout: \"about\"\n---\n\n\n\n> Could we just stop talking and have a glass of Bach?","updated":"2021-11-29T14:17:42.704Z","path":"about/index.html","_id":"ckwk1mq2a0002wdcahdy6ee7z","comments":1,"content":"<blockquote>\n<p>Could we just stop talking and have a glass of Bach?</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Could we just stop talking and have a glass of Bach?</p>\n</blockquote>\n"},{"title":"tags","date":"2021-11-26T07:13:36.000Z","layout":"tags","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-11-26 15:13:36\nlayout: \"tags\"\ntype: \"tags\"\n---\n","updated":"2021-11-29T14:17:42.705Z","path":"tags/index.html","_id":"ckwk1mq2f0006wdcahiusfa18","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"我的Coding生涯","date":"2021-11-26T07:08:38.000Z","layout":"categories","type":"categories","_content":"\n{{ content }}","source":"categories/index.md","raw":"---\ntitle: 我的Coding生涯\ndate: 2021-11-26 15:08:38\nlayout: \"categories\"\ntype: \"categories\"\n---\n\n{{ content }}","updated":"2021-11-29T14:17:42.704Z","path":"categories/index.html","_id":"ckwk1mq2i0007wdca1bbsfqai","comments":1,"content":"{{ content }}","site":{"data":{}},"excerpt":"","more":"{{ content }}"},{"title":"我的一些链接","date":"2021-11-29T04:43:02.000Z","layout":"links","type":"links","_content":"","source":"links/index.md","raw":"---\ntitle: 我的一些链接\ndate: 2021-11-29 12:43:02\nlayout: \"links\"\ntype: \"links\"\n---\n","updated":"2021-11-29T14:17:42.705Z","path":"links/index.html","_id":"ckwk6tyey0000fbca8tls25de","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"小白理财金融产品","date":"2021-11-29T01:43:51.000Z","cover":"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/stock-vector-flat-design-illustration-concepts-for-business-analysis-and-planning-team-work-financial-report-302821412.jpeg","_content":"\n## 国债逆回购\n  \n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/nihuigou.jpeg)  \n  \n    \n\n\n- 优点：零风险\n- 缺点：（陷阱）实际资金占用时间，1是证券公司要拖延1个工作日回款，2是周末不计入国债回购时间。所以有结论说**连续做上1年国债逆回购，年收益率也不会超过1年定期存款的**。\n\n## 可转债  \n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/kezhuanzhai.png)\n\n- ### 通俗理解  \n  比如有个人想开公司创业，需要钱，来找我合伙，我不太了解这个人，所以对他的经营不太放心。于是我跟他定了一个契约：  \n\n  > *我可以暂时把钱给你，但这是我借给你的。在5年之内，如果我发现这家公司确实不错，很赚钱，那我可以把这笔钱，变成公司的股份，正式入股。如果最后这家公司不赚钱，股价一直萎靡不振，那我要你把钱还给我，同时每年给我付一次利息。*  \n\n  这就是可转债的原型，本质上是两点:  \n  1. **一张保底债券，说的就是到期还本付息。**\n  2. **一张看涨期权，说的就是公司在未来有可能发展地很好，股价节节攀升，那我就可以变成公司股东，赚大钱。**\n\n- ### 可转债打新  \n  就是指在可转债还没有上市交易之前，公司开放一个机会，让大家买对应的可转债，这里的买，指的是申购。  \n\n  这个意思，就像某个店家要卖锅，现在有300个锅可以8折出售，然后在所有买锅的人群中，随机挑选出300个幸运买家，把这个八折的锅卖给他。  \n  \n  所以呢，申购新债，并不是你申购，就有资格买入这只可转债的，而要看运气，看你能否中签。  \n\n  如果中签之后，就缴款1000块-3000块不等，上市之后就卖出赚钱就行了。\n\n   \n   \n    \n   \n>*未完待续*","source":"_posts/financial001.md","raw":"---\ntitle: 小白理财金融产品\ndate: 2021-11-29 09:43:51\ntags: 理財\ncategories: 小白理财\ncover: https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/stock-vector-flat-design-illustration-concepts-for-business-analysis-and-planning-team-work-financial-report-302821412.jpeg\n---\n\n## 国债逆回购\n  \n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/nihuigou.jpeg)  \n  \n    \n\n\n- 优点：零风险\n- 缺点：（陷阱）实际资金占用时间，1是证券公司要拖延1个工作日回款，2是周末不计入国债回购时间。所以有结论说**连续做上1年国债逆回购，年收益率也不会超过1年定期存款的**。\n\n## 可转债  \n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/kezhuanzhai.png)\n\n- ### 通俗理解  \n  比如有个人想开公司创业，需要钱，来找我合伙，我不太了解这个人，所以对他的经营不太放心。于是我跟他定了一个契约：  \n\n  > *我可以暂时把钱给你，但这是我借给你的。在5年之内，如果我发现这家公司确实不错，很赚钱，那我可以把这笔钱，变成公司的股份，正式入股。如果最后这家公司不赚钱，股价一直萎靡不振，那我要你把钱还给我，同时每年给我付一次利息。*  \n\n  这就是可转债的原型，本质上是两点:  \n  1. **一张保底债券，说的就是到期还本付息。**\n  2. **一张看涨期权，说的就是公司在未来有可能发展地很好，股价节节攀升，那我就可以变成公司股东，赚大钱。**\n\n- ### 可转债打新  \n  就是指在可转债还没有上市交易之前，公司开放一个机会，让大家买对应的可转债，这里的买，指的是申购。  \n\n  这个意思，就像某个店家要卖锅，现在有300个锅可以8折出售，然后在所有买锅的人群中，随机挑选出300个幸运买家，把这个八折的锅卖给他。  \n  \n  所以呢，申购新债，并不是你申购，就有资格买入这只可转债的，而要看运气，看你能否中签。  \n\n  如果中签之后，就缴款1000块-3000块不等，上市之后就卖出赚钱就行了。\n\n   \n   \n    \n   \n>*未完待续*","slug":"financial001","published":1,"updated":"2021-11-29T14:17:42.703Z","_id":"ckwk1mq270001wdcagr89b6ot","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"国债逆回购\"><a href=\"#国债逆回购\" class=\"headerlink\" title=\"国债逆回购\"></a>国债逆回购</h2><p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/nihuigou.jpeg\" alt=\"img\">  </p>\n<ul>\n<li>优点：零风险</li>\n<li>缺点：（陷阱）实际资金占用时间，1是证券公司要拖延1个工作日回款，2是周末不计入国债回购时间。所以有结论说<strong>连续做上1年国债逆回购，年收益率也不会超过1年定期存款的</strong>。</li>\n</ul>\n<h2 id=\"可转债\"><a href=\"#可转债\" class=\"headerlink\" title=\"可转债\"></a>可转债</h2><p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/kezhuanzhai.png\" alt=\"img\"></p>\n<ul>\n<li><h3 id=\"通俗理解\"><a href=\"#通俗理解\" class=\"headerlink\" title=\"通俗理解\"></a>通俗理解</h3><p>比如有个人想开公司创业，需要钱，来找我合伙，我不太了解这个人，所以对他的经营不太放心。于是我跟他定了一个契约：  </p>\n<blockquote>\n<p><em>我可以暂时把钱给你，但这是我借给你的。在5年之内，如果我发现这家公司确实不错，很赚钱，那我可以把这笔钱，变成公司的股份，正式入股。如果最后这家公司不赚钱，股价一直萎靡不振，那我要你把钱还给我，同时每年给我付一次利息。</em>  </p>\n</blockquote>\n<p>这就是可转债的原型，本质上是两点:  </p>\n<ol>\n<li><strong>一张保底债券，说的就是到期还本付息。</strong></li>\n<li><strong>一张看涨期权，说的就是公司在未来有可能发展地很好，股价节节攀升，那我就可以变成公司股东，赚大钱。</strong></li>\n</ol>\n</li>\n<li><h3 id=\"可转债打新\"><a href=\"#可转债打新\" class=\"headerlink\" title=\"可转债打新\"></a>可转债打新</h3><p>就是指在可转债还没有上市交易之前，公司开放一个机会，让大家买对应的可转债，这里的买，指的是申购。  </p>\n<p>这个意思，就像某个店家要卖锅，现在有300个锅可以8折出售，然后在所有买锅的人群中，随机挑选出300个幸运买家，把这个八折的锅卖给他。  </p>\n<p>所以呢，申购新债，并不是你申购，就有资格买入这只可转债的，而要看运气，看你能否中签。  </p>\n<p>如果中签之后，就缴款1000块-3000块不等，上市之后就卖出赚钱就行了。</p>\n</li>\n</ul>\n<blockquote>\n<p><em>未完待续</em></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"国债逆回购\"><a href=\"#国债逆回购\" class=\"headerlink\" title=\"国债逆回购\"></a>国债逆回购</h2><p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/nihuigou.jpeg\" alt=\"img\">  </p>\n<ul>\n<li>优点：零风险</li>\n<li>缺点：（陷阱）实际资金占用时间，1是证券公司要拖延1个工作日回款，2是周末不计入国债回购时间。所以有结论说<strong>连续做上1年国债逆回购，年收益率也不会超过1年定期存款的</strong>。</li>\n</ul>\n<h2 id=\"可转债\"><a href=\"#可转债\" class=\"headerlink\" title=\"可转债\"></a>可转债</h2><p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/kezhuanzhai.png\" alt=\"img\"></p>\n<ul>\n<li><h3 id=\"通俗理解\"><a href=\"#通俗理解\" class=\"headerlink\" title=\"通俗理解\"></a>通俗理解</h3><p>比如有个人想开公司创业，需要钱，来找我合伙，我不太了解这个人，所以对他的经营不太放心。于是我跟他定了一个契约：  </p>\n<blockquote>\n<p><em>我可以暂时把钱给你，但这是我借给你的。在5年之内，如果我发现这家公司确实不错，很赚钱，那我可以把这笔钱，变成公司的股份，正式入股。如果最后这家公司不赚钱，股价一直萎靡不振，那我要你把钱还给我，同时每年给我付一次利息。</em>  </p>\n</blockquote>\n<p>这就是可转债的原型，本质上是两点:  </p>\n<ol>\n<li><strong>一张保底债券，说的就是到期还本付息。</strong></li>\n<li><strong>一张看涨期权，说的就是公司在未来有可能发展地很好，股价节节攀升，那我就可以变成公司股东，赚大钱。</strong></li>\n</ol>\n</li>\n<li><h3 id=\"可转债打新\"><a href=\"#可转债打新\" class=\"headerlink\" title=\"可转债打新\"></a>可转债打新</h3><p>就是指在可转债还没有上市交易之前，公司开放一个机会，让大家买对应的可转债，这里的买，指的是申购。  </p>\n<p>这个意思，就像某个店家要卖锅，现在有300个锅可以8折出售，然后在所有买锅的人群中，随机挑选出300个幸运买家，把这个八折的锅卖给他。  </p>\n<p>所以呢，申购新债，并不是你申购，就有资格买入这只可转债的，而要看运气，看你能否中签。  </p>\n<p>如果中签之后，就缴款1000块-3000块不等，上市之后就卖出赚钱就行了。</p>\n</li>\n</ul>\n<blockquote>\n<p><em>未完待续</em></p>\n</blockquote>\n"},{"title":"John Frusciante","excerpt":"John Motherfxxker Frusciante!!!","date":"2021-11-26T03:57:09.000Z","cover":"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/John_frusciante_hills_observatory_press_pic_aura_t-09.jpeg","_content":"\n<img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/John-Frusciante-scaled.jpeg\" alt=\"img\" style=\"zoom:75%;\" />","source":"_posts/music001.md","raw":"---\ntitle: John Frusciante\nexcerpt: John Motherfxxker Frusciante!!!\ndate: 2021-11-26 11:57:09\ntags: \n    - 音樂\n    - 吉他\ncategories: 關於音樂\ncover: https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/John_frusciante_hills_observatory_press_pic_aura_t-09.jpeg\n---\n\n<img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/John-Frusciante-scaled.jpeg\" alt=\"img\" style=\"zoom:75%;\" />","slug":"music001","published":1,"updated":"2021-11-29T14:17:42.704Z","_id":"ckwk1mq2a0003wdcah3z8a8tz","comments":1,"layout":"post","photos":[],"link":"","content":"<img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/John-Frusciante-scaled.jpeg\" alt=\"img\" style=\"zoom:75%;\" />","site":{"data":{}},"more":"<img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/John-Frusciante-scaled.jpeg\" alt=\"img\" style=\"zoom:75%;\" />"},{"title":"利用github+jsDelivr搭建图床","date":"2021-11-26T03:57:09.000Z","cover":"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/desk_flat.jpeg","_content":"\n## 前言\n\n图床是什么？图床就是图片存放的地址，用来节省服务器的资源，也可以变相的提升网站加载速度 你是否正在遭遇以下问题： \n1.在用静态博客网站写文章，图片不知怎么保存，保存在哪里 \n\n2.网上复制的心仪图片链接，用着用着某一天就失效了 \n\n3.特意花钱租个[云服务器](https://cloud.tencent.com/product/cvm?from=10680)托管图片，划不来，而且上传操作好繁琐 \n\n4.市面上形形色色的免费图床，但都有时间期限，要么就是速度慢，存储空间小，有的还限流量 \n\n\n\n现在可以利用jsdelivr加速github仓库来实现图床，无论是否使用jsdelivr你都可以利用github搭建一个图床，但缺点是国内加载速度非常慢，严重影响我们的需求，为此我们还需要利用jsdelivr的[cdn](https://cloud.tencent.com/product/cdn?from=10680)加速，jsdelivr在国内的节点有上百个，这样我们就得到了一个访问速度贼快，且免费，空间无限的一个图床。 下面就是教程了，有疑问有错误请评论指出，谢谢，仅以此文章帮助烂记性的自己和正在观看此博客的你。\n\n## 新建github仓库用来存储图片\n\n1.登录你的 github 账号，[点击跳转登录](https://github.com/)，右上角加号处点击此选项，创建一个新的仓库\n\n\n\n<img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dd3d43b810fa006d148b835e8493ba33.jpeg\" style=\"zoom:50%;\" />\n\n2.详细设置\n\n\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/468826bf45623c300e6eecad9a936b67.png)\n\n\n\n3.此仓库你可以上传你的图片，用来达到存储的目的\n\n## 利用jsdelivr加速访问\n\n1.现在我们直接访问图片的链接时，速度是很慢的，所以我们需要利用jsdelivr加速访问我们的图片 2.假设我们的仓库中有一张`test.png`的图片 3.使用github的链接直接访问是这样访问的`https://github.com/github用户名/仓库名/raw/master/test.png`，经过测试得知，加载速度是非常不理想的，此时将图片链接放入我们的网站内，将会导致网页加载速度十分缓慢，图片会一直在加载状态 4.现在使用jsdelivr访问非常简单，即把图片地址链接域名改为 CDN 的域名，是这样的访问格式，`https://cdn.jsdelivr.net/gh/github用户名/仓库名@master/test.png`，经过测试，现在的访问速度已经起飞了\n\n## 利用PicGo工具便捷管理图片\n\n1.前往picgo的GitHub仓库下载此工具，[点击前往下载](https://github.com/Molunerfinn/PicGo)，如果下载速度太慢，科学上网下载会快一点，下载好后安装即可 2.然后，在 github 上创建一个 token1，点击右上角账号上的 settings\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/1c2528d2a8e6e9a58a51a91e2c5207dd.png)\n\n\n\n3.然后左侧点击 developer settings ，再点击 personal access tokens ，然后点击 generate new token\n\n\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/ff87b08f8c2f7a2b534880240adfef91.png)\n\n4.Note 用来说明你创建 token 的用途，然后 scopes 只需要选 repo 的所有选项即可\n\n\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/455006a56bbea4bd48e3a976cca31762.png)\n\n\n\n5.最后拉到底部，点击 generate token ，即可成功 \n\n\n\n6.找个地方记下这一串 token，等会需要用到。（如果没有记住，等再查看时就只能重新生成了）\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/78b68fca4d052b832cb2d74e28680423.png)\n\n\n\n7.打开picgo工具进行配置\n\n\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/81e2217a93f056042a1ffa82b36fc945.jpeg)\n\n- 在 PicGo 中，找到图床设置 -> GitHub图床。\n- 仓库名即为你的github账号/图片仓库名\n- 分支名就用默认的 master\n- Token 就填写刚才我们生成的 Token\n- 存储路径如果需要指定子目录可以填写例如 img/ 。我这里没有填，就会上传到我图片仓库的根目录。\n- 自定义域名就填写 jsDelivr 的域名，`https://cdn.jsdelivr.net/gh/github用户名/仓库名@master`\n- 最后设为默认图床，下次在 typora 上传图片就会自动上传到 github 图床了\n\n## 总结-便捷使用方法\n\n1.点击上传图片，此时如果你上面的配置正确，上传的图片将会同步至github仓库内\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/f8b6d564267ba617d49216d602a842c3.jpeg)\n\n2.点击相册，可见你的图片，点击此按钮，即可复制图片链接\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dbbd49a6d24bc6f6cc4edbef951847d4.jpeg)\n\n3.你也可以指定上传后的链接格式\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/4466c69df1bb036fa3a8508ac66b4a5a.jpeg)\n\n4.得到链接后，你就可以尽情的使用了，加载速度十分迅速，白嫖真香，以后想要存图片就上传，接着复制链接出来使用，非常的方便","source":"_posts/imageTub.md","raw":"---\ntitle: 利用github+jsDelivr搭建图床\ndate: 2021-11-26 11:57:09\ntags: 程序員技術\ncategories: 我的Coding生涯\ncover: https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/desk_flat.jpeg\n---\n\n## 前言\n\n图床是什么？图床就是图片存放的地址，用来节省服务器的资源，也可以变相的提升网站加载速度 你是否正在遭遇以下问题： \n1.在用静态博客网站写文章，图片不知怎么保存，保存在哪里 \n\n2.网上复制的心仪图片链接，用着用着某一天就失效了 \n\n3.特意花钱租个[云服务器](https://cloud.tencent.com/product/cvm?from=10680)托管图片，划不来，而且上传操作好繁琐 \n\n4.市面上形形色色的免费图床，但都有时间期限，要么就是速度慢，存储空间小，有的还限流量 \n\n\n\n现在可以利用jsdelivr加速github仓库来实现图床，无论是否使用jsdelivr你都可以利用github搭建一个图床，但缺点是国内加载速度非常慢，严重影响我们的需求，为此我们还需要利用jsdelivr的[cdn](https://cloud.tencent.com/product/cdn?from=10680)加速，jsdelivr在国内的节点有上百个，这样我们就得到了一个访问速度贼快，且免费，空间无限的一个图床。 下面就是教程了，有疑问有错误请评论指出，谢谢，仅以此文章帮助烂记性的自己和正在观看此博客的你。\n\n## 新建github仓库用来存储图片\n\n1.登录你的 github 账号，[点击跳转登录](https://github.com/)，右上角加号处点击此选项，创建一个新的仓库\n\n\n\n<img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dd3d43b810fa006d148b835e8493ba33.jpeg\" style=\"zoom:50%;\" />\n\n2.详细设置\n\n\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/468826bf45623c300e6eecad9a936b67.png)\n\n\n\n3.此仓库你可以上传你的图片，用来达到存储的目的\n\n## 利用jsdelivr加速访问\n\n1.现在我们直接访问图片的链接时，速度是很慢的，所以我们需要利用jsdelivr加速访问我们的图片 2.假设我们的仓库中有一张`test.png`的图片 3.使用github的链接直接访问是这样访问的`https://github.com/github用户名/仓库名/raw/master/test.png`，经过测试得知，加载速度是非常不理想的，此时将图片链接放入我们的网站内，将会导致网页加载速度十分缓慢，图片会一直在加载状态 4.现在使用jsdelivr访问非常简单，即把图片地址链接域名改为 CDN 的域名，是这样的访问格式，`https://cdn.jsdelivr.net/gh/github用户名/仓库名@master/test.png`，经过测试，现在的访问速度已经起飞了\n\n## 利用PicGo工具便捷管理图片\n\n1.前往picgo的GitHub仓库下载此工具，[点击前往下载](https://github.com/Molunerfinn/PicGo)，如果下载速度太慢，科学上网下载会快一点，下载好后安装即可 2.然后，在 github 上创建一个 token1，点击右上角账号上的 settings\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/1c2528d2a8e6e9a58a51a91e2c5207dd.png)\n\n\n\n3.然后左侧点击 developer settings ，再点击 personal access tokens ，然后点击 generate new token\n\n\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/ff87b08f8c2f7a2b534880240adfef91.png)\n\n4.Note 用来说明你创建 token 的用途，然后 scopes 只需要选 repo 的所有选项即可\n\n\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/455006a56bbea4bd48e3a976cca31762.png)\n\n\n\n5.最后拉到底部，点击 generate token ，即可成功 \n\n\n\n6.找个地方记下这一串 token，等会需要用到。（如果没有记住，等再查看时就只能重新生成了）\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/78b68fca4d052b832cb2d74e28680423.png)\n\n\n\n7.打开picgo工具进行配置\n\n\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/81e2217a93f056042a1ffa82b36fc945.jpeg)\n\n- 在 PicGo 中，找到图床设置 -> GitHub图床。\n- 仓库名即为你的github账号/图片仓库名\n- 分支名就用默认的 master\n- Token 就填写刚才我们生成的 Token\n- 存储路径如果需要指定子目录可以填写例如 img/ 。我这里没有填，就会上传到我图片仓库的根目录。\n- 自定义域名就填写 jsDelivr 的域名，`https://cdn.jsdelivr.net/gh/github用户名/仓库名@master`\n- 最后设为默认图床，下次在 typora 上传图片就会自动上传到 github 图床了\n\n## 总结-便捷使用方法\n\n1.点击上传图片，此时如果你上面的配置正确，上传的图片将会同步至github仓库内\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/f8b6d564267ba617d49216d602a842c3.jpeg)\n\n2.点击相册，可见你的图片，点击此按钮，即可复制图片链接\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dbbd49a6d24bc6f6cc4edbef951847d4.jpeg)\n\n3.你也可以指定上传后的链接格式\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/4466c69df1bb036fa3a8508ac66b4a5a.jpeg)\n\n4.得到链接后，你就可以尽情的使用了，加载速度十分迅速，白嫖真香，以后想要存图片就上传，接着复制链接出来使用，非常的方便","slug":"imageTub","published":1,"updated":"2021-11-29T14:17:42.703Z","_id":"ckwk1mq2o000gwdcafcox5ya1","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>图床是什么？图床就是图片存放的地址，用来节省服务器的资源，也可以变相的提升网站加载速度 你是否正在遭遇以下问题：<br>1.在用静态博客网站写文章，图片不知怎么保存，保存在哪里 </p>\n<p>2.网上复制的心仪图片链接，用着用着某一天就失效了 </p>\n<p>3.特意花钱租个<a href=\"https://cloud.tencent.com/product/cvm?from=10680\">云服务器</a>托管图片，划不来，而且上传操作好繁琐 </p>\n<p>4.市面上形形色色的免费图床，但都有时间期限，要么就是速度慢，存储空间小，有的还限流量 </p>\n<p>现在可以利用jsdelivr加速github仓库来实现图床，无论是否使用jsdelivr你都可以利用github搭建一个图床，但缺点是国内加载速度非常慢，严重影响我们的需求，为此我们还需要利用jsdelivr的<a href=\"https://cloud.tencent.com/product/cdn?from=10680\">cdn</a>加速，jsdelivr在国内的节点有上百个，这样我们就得到了一个访问速度贼快，且免费，空间无限的一个图床。 下面就是教程了，有疑问有错误请评论指出，谢谢，仅以此文章帮助烂记性的自己和正在观看此博客的你。</p>\n<h2 id=\"新建github仓库用来存储图片\"><a href=\"#新建github仓库用来存储图片\" class=\"headerlink\" title=\"新建github仓库用来存储图片\"></a>新建github仓库用来存储图片</h2><p>1.登录你的 github 账号，<a href=\"https://github.com/\">点击跳转登录</a>，右上角加号处点击此选项，创建一个新的仓库</p>\n<img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dd3d43b810fa006d148b835e8493ba33.jpeg\" style=\"zoom:50%;\" />\n\n<p>2.详细设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/468826bf45623c300e6eecad9a936b67.png\" alt=\"img\"></p>\n<p>3.此仓库你可以上传你的图片，用来达到存储的目的</p>\n<h2 id=\"利用jsdelivr加速访问\"><a href=\"#利用jsdelivr加速访问\" class=\"headerlink\" title=\"利用jsdelivr加速访问\"></a>利用jsdelivr加速访问</h2><p>1.现在我们直接访问图片的链接时，速度是很慢的，所以我们需要利用jsdelivr加速访问我们的图片 2.假设我们的仓库中有一张<code>test.png</code>的图片 3.使用github的链接直接访问是这样访问的<code>https://github.com/github用户名/仓库名/raw/master/test.png</code>，经过测试得知，加载速度是非常不理想的，此时将图片链接放入我们的网站内，将会导致网页加载速度十分缓慢，图片会一直在加载状态 4.现在使用jsdelivr访问非常简单，即把图片地址链接域名改为 CDN 的域名，是这样的访问格式，<code>https://cdn.jsdelivr.net/gh/github用户名/仓库名@master/test.png</code>，经过测试，现在的访问速度已经起飞了</p>\n<h2 id=\"利用PicGo工具便捷管理图片\"><a href=\"#利用PicGo工具便捷管理图片\" class=\"headerlink\" title=\"利用PicGo工具便捷管理图片\"></a>利用PicGo工具便捷管理图片</h2><p>1.前往picgo的GitHub仓库下载此工具，<a href=\"https://github.com/Molunerfinn/PicGo\">点击前往下载</a>，如果下载速度太慢，科学上网下载会快一点，下载好后安装即可 2.然后，在 github 上创建一个 token1，点击右上角账号上的 settings</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/1c2528d2a8e6e9a58a51a91e2c5207dd.png\" alt=\"img\"></p>\n<p>3.然后左侧点击 developer settings ，再点击 personal access tokens ，然后点击 generate new token</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/ff87b08f8c2f7a2b534880240adfef91.png\" alt=\"img\"></p>\n<p>4.Note 用来说明你创建 token 的用途，然后 scopes 只需要选 repo 的所有选项即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/455006a56bbea4bd48e3a976cca31762.png\" alt=\"img\"></p>\n<p>5.最后拉到底部，点击 generate token ，即可成功 </p>\n<p>6.找个地方记下这一串 token，等会需要用到。（如果没有记住，等再查看时就只能重新生成了）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/78b68fca4d052b832cb2d74e28680423.png\" alt=\"img\"></p>\n<p>7.打开picgo工具进行配置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/81e2217a93f056042a1ffa82b36fc945.jpeg\" alt=\"img\"></p>\n<ul>\n<li>在 PicGo 中，找到图床设置 -&gt; GitHub图床。</li>\n<li>仓库名即为你的github账号/图片仓库名</li>\n<li>分支名就用默认的 master</li>\n<li>Token 就填写刚才我们生成的 Token</li>\n<li>存储路径如果需要指定子目录可以填写例如 img/ 。我这里没有填，就会上传到我图片仓库的根目录。</li>\n<li>自定义域名就填写 jsDelivr 的域名，<code>https://cdn.jsdelivr.net/gh/github用户名/仓库名@master</code></li>\n<li>最后设为默认图床，下次在 typora 上传图片就会自动上传到 github 图床了</li>\n</ul>\n<h2 id=\"总结-便捷使用方法\"><a href=\"#总结-便捷使用方法\" class=\"headerlink\" title=\"总结-便捷使用方法\"></a>总结-便捷使用方法</h2><p>1.点击上传图片，此时如果你上面的配置正确，上传的图片将会同步至github仓库内</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/f8b6d564267ba617d49216d602a842c3.jpeg\" alt=\"img\"></p>\n<p>2.点击相册，可见你的图片，点击此按钮，即可复制图片链接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dbbd49a6d24bc6f6cc4edbef951847d4.jpeg\" alt=\"img\"></p>\n<p>3.你也可以指定上传后的链接格式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/4466c69df1bb036fa3a8508ac66b4a5a.jpeg\" alt=\"img\"></p>\n<p>4.得到链接后，你就可以尽情的使用了，加载速度十分迅速，白嫖真香，以后想要存图片就上传，接着复制链接出来使用，非常的方便</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>图床是什么？图床就是图片存放的地址，用来节省服务器的资源，也可以变相的提升网站加载速度 你是否正在遭遇以下问题：<br>1.在用静态博客网站写文章，图片不知怎么保存，保存在哪里 </p>\n<p>2.网上复制的心仪图片链接，用着用着某一天就失效了 </p>\n<p>3.特意花钱租个<a href=\"https://cloud.tencent.com/product/cvm?from=10680\">云服务器</a>托管图片，划不来，而且上传操作好繁琐 </p>\n<p>4.市面上形形色色的免费图床，但都有时间期限，要么就是速度慢，存储空间小，有的还限流量 </p>\n<p>现在可以利用jsdelivr加速github仓库来实现图床，无论是否使用jsdelivr你都可以利用github搭建一个图床，但缺点是国内加载速度非常慢，严重影响我们的需求，为此我们还需要利用jsdelivr的<a href=\"https://cloud.tencent.com/product/cdn?from=10680\">cdn</a>加速，jsdelivr在国内的节点有上百个，这样我们就得到了一个访问速度贼快，且免费，空间无限的一个图床。 下面就是教程了，有疑问有错误请评论指出，谢谢，仅以此文章帮助烂记性的自己和正在观看此博客的你。</p>\n<h2 id=\"新建github仓库用来存储图片\"><a href=\"#新建github仓库用来存储图片\" class=\"headerlink\" title=\"新建github仓库用来存储图片\"></a>新建github仓库用来存储图片</h2><p>1.登录你的 github 账号，<a href=\"https://github.com/\">点击跳转登录</a>，右上角加号处点击此选项，创建一个新的仓库</p>\n<img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dd3d43b810fa006d148b835e8493ba33.jpeg\" style=\"zoom:50%;\" />\n\n<p>2.详细设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/468826bf45623c300e6eecad9a936b67.png\" alt=\"img\"></p>\n<p>3.此仓库你可以上传你的图片，用来达到存储的目的</p>\n<h2 id=\"利用jsdelivr加速访问\"><a href=\"#利用jsdelivr加速访问\" class=\"headerlink\" title=\"利用jsdelivr加速访问\"></a>利用jsdelivr加速访问</h2><p>1.现在我们直接访问图片的链接时，速度是很慢的，所以我们需要利用jsdelivr加速访问我们的图片 2.假设我们的仓库中有一张<code>test.png</code>的图片 3.使用github的链接直接访问是这样访问的<code>https://github.com/github用户名/仓库名/raw/master/test.png</code>，经过测试得知，加载速度是非常不理想的，此时将图片链接放入我们的网站内，将会导致网页加载速度十分缓慢，图片会一直在加载状态 4.现在使用jsdelivr访问非常简单，即把图片地址链接域名改为 CDN 的域名，是这样的访问格式，<code>https://cdn.jsdelivr.net/gh/github用户名/仓库名@master/test.png</code>，经过测试，现在的访问速度已经起飞了</p>\n<h2 id=\"利用PicGo工具便捷管理图片\"><a href=\"#利用PicGo工具便捷管理图片\" class=\"headerlink\" title=\"利用PicGo工具便捷管理图片\"></a>利用PicGo工具便捷管理图片</h2><p>1.前往picgo的GitHub仓库下载此工具，<a href=\"https://github.com/Molunerfinn/PicGo\">点击前往下载</a>，如果下载速度太慢，科学上网下载会快一点，下载好后安装即可 2.然后，在 github 上创建一个 token1，点击右上角账号上的 settings</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/1c2528d2a8e6e9a58a51a91e2c5207dd.png\" alt=\"img\"></p>\n<p>3.然后左侧点击 developer settings ，再点击 personal access tokens ，然后点击 generate new token</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/ff87b08f8c2f7a2b534880240adfef91.png\" alt=\"img\"></p>\n<p>4.Note 用来说明你创建 token 的用途，然后 scopes 只需要选 repo 的所有选项即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/455006a56bbea4bd48e3a976cca31762.png\" alt=\"img\"></p>\n<p>5.最后拉到底部，点击 generate token ，即可成功 </p>\n<p>6.找个地方记下这一串 token，等会需要用到。（如果没有记住，等再查看时就只能重新生成了）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/78b68fca4d052b832cb2d74e28680423.png\" alt=\"img\"></p>\n<p>7.打开picgo工具进行配置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/81e2217a93f056042a1ffa82b36fc945.jpeg\" alt=\"img\"></p>\n<ul>\n<li>在 PicGo 中，找到图床设置 -&gt; GitHub图床。</li>\n<li>仓库名即为你的github账号/图片仓库名</li>\n<li>分支名就用默认的 master</li>\n<li>Token 就填写刚才我们生成的 Token</li>\n<li>存储路径如果需要指定子目录可以填写例如 img/ 。我这里没有填，就会上传到我图片仓库的根目录。</li>\n<li>自定义域名就填写 jsDelivr 的域名，<code>https://cdn.jsdelivr.net/gh/github用户名/仓库名@master</code></li>\n<li>最后设为默认图床，下次在 typora 上传图片就会自动上传到 github 图床了</li>\n</ul>\n<h2 id=\"总结-便捷使用方法\"><a href=\"#总结-便捷使用方法\" class=\"headerlink\" title=\"总结-便捷使用方法\"></a>总结-便捷使用方法</h2><p>1.点击上传图片，此时如果你上面的配置正确，上传的图片将会同步至github仓库内</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/f8b6d564267ba617d49216d602a842c3.jpeg\" alt=\"img\"></p>\n<p>2.点击相册，可见你的图片，点击此按钮，即可复制图片链接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dbbd49a6d24bc6f6cc4edbef951847d4.jpeg\" alt=\"img\"></p>\n<p>3.你也可以指定上传后的链接格式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/4466c69df1bb036fa3a8508ac66b4a5a.jpeg\" alt=\"img\"></p>\n<p>4.得到链接后，你就可以尽情的使用了，加载速度十分迅速，白嫖真香，以后想要存图片就上传，接着复制链接出来使用，非常的方便</p>\n"},{"title":"饥荒联机版控制台代码大全","date":"2021-11-26T03:57:09.000Z","cover":"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dont-starve-together-commands.jpeg","banner":"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dont-starve-together-commands.jpeg","_content":"\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dont-starve-together-commands.jpeg)\n\n## 玩家命令\n> #动作预测，必须在控制台的本地模式下执行该命令才有效。\n`ThePlayer:EnableMovementPrediction(true)`\n\n> #你可以合成任何东西。\n`ThePlayer.components.builder:GiveAllRecipes()`\n\n> #生命值上限\n`ThePlayer.components.health:SetMaxHealth(value)`\n\n> #理智值上限，改变你的角色 的生命 值上限。\n`ThePlayer.components.sanity:SetMax(value)`\n\n> #饥饿值上限，改变你的角色 的饥饿 值上限。\n`ThePlayer.components.hunger:SetMax(value)`\n\n> #暂停饥饿，你的角色 不再降低饥饿值。\n`ThePlayer.components.hunger:Pause(true)`\n\n> #伤害倍数，改变你的角色 的伤害倍数。\n`ThePlayer.components.combat.damagemultiplier = value`\n\n> #海狸，把伍迪 变成海狸 。把 .01 改为 1 可以让你变回伍迪。\n`ThePlayer.components.beaverness:SetPercent(.01)`\n\n## 其他玩家命令\n\n> #列出所有玩家的用户名和编号\n`c_listallplayers()`\n\n> #取一个玩家\n`AllPlayers[number] `\n\n> #对所有玩家使用同一命令,只修改command，用其他命令代替command，使用 \"v\" 代替命令中的 AllPlayers[number]。例如， \"for k,v in pairs(AllPlayers) do c_move(v) end\" 将会把所有玩家都移动到鼠标所指的位置。\n`for k,v in pairs(AllPlayers) do command end `\n\n> #移动一个玩家,移动玩家到鼠标所指的位置。\n`c_move(AllPlayers[number])`\n\n> #杀死一个玩家\n`AllPlayers[number]:PushEvent('death')`\n\n> #复活玩家\n`AllPlayers[number]:PushEvent('respawnfromghost')`\n\n> #传送至玩家,传送到对应编号的玩家，玩家编号可以通过 c_listallplayers() 获取。\n`c_goto(AllPlayers[number]) `\n\n> #丢掉玩家物品栏的物品\n`AllPlayers[number].components.inventory:DropEverything() `\n\n> #让玩家重新选择角色,使用该命令将会删除玩家物品栏的物品而不会掉落，所以推荐你先让玩家的物品丢掉他们的物品，或者使用上一条命令 DropEverthing()。\n`c_despawn(AllPlayers[number]) `\n\n> #截至2016年6月25日，增加了一个新的命令来指定玩家。你可以通过一个玩家名UserToPlayer('玩家名') 来指定一个玩家而不是使用玩家编号。例如，杀死一名叫做 \"PlayerA\" 的玩家，他的用户编号为5，你可以执行：\n`AllPlayers[5]:PushEvent('death') `\n\n> #但在此之前你必须先运行 c_listallplayers() 来知道玩家编号，十分麻烦。为了简单一点地执行命令，你可以把命令改成：\n`UserToPlayer('PlayerA'):PushEvent('death')`\n\n## 世界命令\n\n> dowhat\n`whatcode`","source":"_posts/game001.md","raw":"---\ntitle: 饥荒联机版控制台代码大全\ndate: 2021-11-26 11:57:09\ntags: 遊戲 \ncategories: 第九藝術探索\ncover: https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dont-starve-together-commands.jpeg\nbanner: https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dont-starve-together-commands.jpeg\n---\n\n![img](https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dont-starve-together-commands.jpeg)\n\n## 玩家命令\n> #动作预测，必须在控制台的本地模式下执行该命令才有效。\n`ThePlayer:EnableMovementPrediction(true)`\n\n> #你可以合成任何东西。\n`ThePlayer.components.builder:GiveAllRecipes()`\n\n> #生命值上限\n`ThePlayer.components.health:SetMaxHealth(value)`\n\n> #理智值上限，改变你的角色 的生命 值上限。\n`ThePlayer.components.sanity:SetMax(value)`\n\n> #饥饿值上限，改变你的角色 的饥饿 值上限。\n`ThePlayer.components.hunger:SetMax(value)`\n\n> #暂停饥饿，你的角色 不再降低饥饿值。\n`ThePlayer.components.hunger:Pause(true)`\n\n> #伤害倍数，改变你的角色 的伤害倍数。\n`ThePlayer.components.combat.damagemultiplier = value`\n\n> #海狸，把伍迪 变成海狸 。把 .01 改为 1 可以让你变回伍迪。\n`ThePlayer.components.beaverness:SetPercent(.01)`\n\n## 其他玩家命令\n\n> #列出所有玩家的用户名和编号\n`c_listallplayers()`\n\n> #取一个玩家\n`AllPlayers[number] `\n\n> #对所有玩家使用同一命令,只修改command，用其他命令代替command，使用 \"v\" 代替命令中的 AllPlayers[number]。例如， \"for k,v in pairs(AllPlayers) do c_move(v) end\" 将会把所有玩家都移动到鼠标所指的位置。\n`for k,v in pairs(AllPlayers) do command end `\n\n> #移动一个玩家,移动玩家到鼠标所指的位置。\n`c_move(AllPlayers[number])`\n\n> #杀死一个玩家\n`AllPlayers[number]:PushEvent('death')`\n\n> #复活玩家\n`AllPlayers[number]:PushEvent('respawnfromghost')`\n\n> #传送至玩家,传送到对应编号的玩家，玩家编号可以通过 c_listallplayers() 获取。\n`c_goto(AllPlayers[number]) `\n\n> #丢掉玩家物品栏的物品\n`AllPlayers[number].components.inventory:DropEverything() `\n\n> #让玩家重新选择角色,使用该命令将会删除玩家物品栏的物品而不会掉落，所以推荐你先让玩家的物品丢掉他们的物品，或者使用上一条命令 DropEverthing()。\n`c_despawn(AllPlayers[number]) `\n\n> #截至2016年6月25日，增加了一个新的命令来指定玩家。你可以通过一个玩家名UserToPlayer('玩家名') 来指定一个玩家而不是使用玩家编号。例如，杀死一名叫做 \"PlayerA\" 的玩家，他的用户编号为5，你可以执行：\n`AllPlayers[5]:PushEvent('death') `\n\n> #但在此之前你必须先运行 c_listallplayers() 来知道玩家编号，十分麻烦。为了简单一点地执行命令，你可以把命令改成：\n`UserToPlayer('PlayerA'):PushEvent('death')`\n\n## 世界命令\n\n> dowhat\n`whatcode`","slug":"game001","published":1,"updated":"2021-11-29T16:46:06.588Z","_id":"ckwkb66ns0000w2caavau8bsm","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dont-starve-together-commands.jpeg\" alt=\"img\"></p>\n<h2 id=\"玩家命令\"><a href=\"#玩家命令\" class=\"headerlink\" title=\"玩家命令\"></a>玩家命令</h2><blockquote>\n<p>#动作预测，必须在控制台的本地模式下执行该命令才有效。<br><code>ThePlayer:EnableMovementPrediction(true)</code></p>\n</blockquote>\n<blockquote>\n<p>#你可以合成任何东西。<br><code>ThePlayer.components.builder:GiveAllRecipes()</code></p>\n</blockquote>\n<blockquote>\n<p>#生命值上限<br><code>ThePlayer.components.health:SetMaxHealth(value)</code></p>\n</blockquote>\n<blockquote>\n<p>#理智值上限，改变你的角色 的生命 值上限。<br><code>ThePlayer.components.sanity:SetMax(value)</code></p>\n</blockquote>\n<blockquote>\n<p>#饥饿值上限，改变你的角色 的饥饿 值上限。<br><code>ThePlayer.components.hunger:SetMax(value)</code></p>\n</blockquote>\n<blockquote>\n<p>#暂停饥饿，你的角色 不再降低饥饿值。<br><code>ThePlayer.components.hunger:Pause(true)</code></p>\n</blockquote>\n<blockquote>\n<p>#伤害倍数，改变你的角色 的伤害倍数。<br><code>ThePlayer.components.combat.damagemultiplier = value</code></p>\n</blockquote>\n<blockquote>\n<p>#海狸，把伍迪 变成海狸 。把 .01 改为 1 可以让你变回伍迪。<br><code>ThePlayer.components.beaverness:SetPercent(.01)</code></p>\n</blockquote>\n<h2 id=\"其他玩家命令\"><a href=\"#其他玩家命令\" class=\"headerlink\" title=\"其他玩家命令\"></a>其他玩家命令</h2><blockquote>\n<p>#列出所有玩家的用户名和编号<br><code>c_listallplayers()</code></p>\n</blockquote>\n<blockquote>\n<p>#取一个玩家<br><code>AllPlayers[number] </code></p>\n</blockquote>\n<blockquote>\n<p>#对所有玩家使用同一命令,只修改command，用其他命令代替command，使用 “v” 代替命令中的 AllPlayers[number]。例如， “for k,v in pairs(AllPlayers) do c_move(v) end” 将会把所有玩家都移动到鼠标所指的位置。<br><code>for k,v in pairs(AllPlayers) do command end </code></p>\n</blockquote>\n<blockquote>\n<p>#移动一个玩家,移动玩家到鼠标所指的位置。<br><code>c_move(AllPlayers[number])</code></p>\n</blockquote>\n<blockquote>\n<p>#杀死一个玩家<br><code>AllPlayers[number]:PushEvent(&#39;death&#39;)</code></p>\n</blockquote>\n<blockquote>\n<p>#复活玩家<br><code>AllPlayers[number]:PushEvent(&#39;respawnfromghost&#39;)</code></p>\n</blockquote>\n<blockquote>\n<p>#传送至玩家,传送到对应编号的玩家，玩家编号可以通过 c_listallplayers() 获取。<br><code>c_goto(AllPlayers[number]) </code></p>\n</blockquote>\n<blockquote>\n<p>#丢掉玩家物品栏的物品<br><code>AllPlayers[number].components.inventory:DropEverything() </code></p>\n</blockquote>\n<blockquote>\n<p>#让玩家重新选择角色,使用该命令将会删除玩家物品栏的物品而不会掉落，所以推荐你先让玩家的物品丢掉他们的物品，或者使用上一条命令 DropEverthing()。<br><code>c_despawn(AllPlayers[number]) </code></p>\n</blockquote>\n<blockquote>\n<p>#截至2016年6月25日，增加了一个新的命令来指定玩家。你可以通过一个玩家名UserToPlayer(‘玩家名’) 来指定一个玩家而不是使用玩家编号。例如，杀死一名叫做 “PlayerA” 的玩家，他的用户编号为5，你可以执行：<br><code>AllPlayers[5]:PushEvent(&#39;death&#39;) </code></p>\n</blockquote>\n<blockquote>\n<p>#但在此之前你必须先运行 c_listallplayers() 来知道玩家编号，十分麻烦。为了简单一点地执行命令，你可以把命令改成：<br><code>UserToPlayer(&#39;PlayerA&#39;):PushEvent(&#39;death&#39;)</code></p>\n</blockquote>\n<h2 id=\"世界命令\"><a href=\"#世界命令\" class=\"headerlink\" title=\"世界命令\"></a>世界命令</h2><blockquote>\n<p>dowhat<br><code>whatcode</code></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://cdn.jsdelivr.net/gh/luzizheng/images@master/img/dont-starve-together-commands.jpeg\" alt=\"img\"></p>\n<h2 id=\"玩家命令\"><a href=\"#玩家命令\" class=\"headerlink\" title=\"玩家命令\"></a>玩家命令</h2><blockquote>\n<p>#动作预测，必须在控制台的本地模式下执行该命令才有效。<br><code>ThePlayer:EnableMovementPrediction(true)</code></p>\n</blockquote>\n<blockquote>\n<p>#你可以合成任何东西。<br><code>ThePlayer.components.builder:GiveAllRecipes()</code></p>\n</blockquote>\n<blockquote>\n<p>#生命值上限<br><code>ThePlayer.components.health:SetMaxHealth(value)</code></p>\n</blockquote>\n<blockquote>\n<p>#理智值上限，改变你的角色 的生命 值上限。<br><code>ThePlayer.components.sanity:SetMax(value)</code></p>\n</blockquote>\n<blockquote>\n<p>#饥饿值上限，改变你的角色 的饥饿 值上限。<br><code>ThePlayer.components.hunger:SetMax(value)</code></p>\n</blockquote>\n<blockquote>\n<p>#暂停饥饿，你的角色 不再降低饥饿值。<br><code>ThePlayer.components.hunger:Pause(true)</code></p>\n</blockquote>\n<blockquote>\n<p>#伤害倍数，改变你的角色 的伤害倍数。<br><code>ThePlayer.components.combat.damagemultiplier = value</code></p>\n</blockquote>\n<blockquote>\n<p>#海狸，把伍迪 变成海狸 。把 .01 改为 1 可以让你变回伍迪。<br><code>ThePlayer.components.beaverness:SetPercent(.01)</code></p>\n</blockquote>\n<h2 id=\"其他玩家命令\"><a href=\"#其他玩家命令\" class=\"headerlink\" title=\"其他玩家命令\"></a>其他玩家命令</h2><blockquote>\n<p>#列出所有玩家的用户名和编号<br><code>c_listallplayers()</code></p>\n</blockquote>\n<blockquote>\n<p>#取一个玩家<br><code>AllPlayers[number] </code></p>\n</blockquote>\n<blockquote>\n<p>#对所有玩家使用同一命令,只修改command，用其他命令代替command，使用 “v” 代替命令中的 AllPlayers[number]。例如， “for k,v in pairs(AllPlayers) do c_move(v) end” 将会把所有玩家都移动到鼠标所指的位置。<br><code>for k,v in pairs(AllPlayers) do command end </code></p>\n</blockquote>\n<blockquote>\n<p>#移动一个玩家,移动玩家到鼠标所指的位置。<br><code>c_move(AllPlayers[number])</code></p>\n</blockquote>\n<blockquote>\n<p>#杀死一个玩家<br><code>AllPlayers[number]:PushEvent(&#39;death&#39;)</code></p>\n</blockquote>\n<blockquote>\n<p>#复活玩家<br><code>AllPlayers[number]:PushEvent(&#39;respawnfromghost&#39;)</code></p>\n</blockquote>\n<blockquote>\n<p>#传送至玩家,传送到对应编号的玩家，玩家编号可以通过 c_listallplayers() 获取。<br><code>c_goto(AllPlayers[number]) </code></p>\n</blockquote>\n<blockquote>\n<p>#丢掉玩家物品栏的物品<br><code>AllPlayers[number].components.inventory:DropEverything() </code></p>\n</blockquote>\n<blockquote>\n<p>#让玩家重新选择角色,使用该命令将会删除玩家物品栏的物品而不会掉落，所以推荐你先让玩家的物品丢掉他们的物品，或者使用上一条命令 DropEverthing()。<br><code>c_despawn(AllPlayers[number]) </code></p>\n</blockquote>\n<blockquote>\n<p>#截至2016年6月25日，增加了一个新的命令来指定玩家。你可以通过一个玩家名UserToPlayer(‘玩家名’) 来指定一个玩家而不是使用玩家编号。例如，杀死一名叫做 “PlayerA” 的玩家，他的用户编号为5，你可以执行：<br><code>AllPlayers[5]:PushEvent(&#39;death&#39;) </code></p>\n</blockquote>\n<blockquote>\n<p>#但在此之前你必须先运行 c_listallplayers() 来知道玩家编号，十分麻烦。为了简单一点地执行命令，你可以把命令改成：<br><code>UserToPlayer(&#39;PlayerA&#39;):PushEvent(&#39;death&#39;)</code></p>\n</blockquote>\n<h2 id=\"世界命令\"><a href=\"#世界命令\" class=\"headerlink\" title=\"世界命令\"></a>世界命令</h2><blockquote>\n<p>dowhat<br><code>whatcode</code></p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckwk1mq270001wdcagr89b6ot","category_id":"ckwk1mq2d0004wdcaafk57zbd","_id":"ckwk1mq2l000bwdcaagdkafcp"},{"post_id":"ckwk1mq2o000gwdcafcox5ya1","category_id":"ckwk1mq2p000hwdcada660kmm","_id":"ckwk1mq2p000kwdca90j5alp4"},{"post_id":"ckwkb66ns0000w2caavau8bsm","category_id":"ckwkgm11x000261cact69d2u2","_id":"ckwkgm120000761ca6a6dgga5"},{"post_id":"ckwk1mq2a0003wdcah3z8a8tz","category_id":"ckwkgm11z000461ca5lsb29pg","_id":"ckwkgm121000a61ca1fwxeuhs"}],"PostTag":[{"post_id":"ckwk1mq2a0003wdcah3z8a8tz","tag_id":"ckwk1mq2l000cwdcag4ba267t","_id":"ckwk1mq2m000fwdca7f61fvnn"},{"post_id":"ckwk1mq270001wdcagr89b6ot","tag_id":"ckwkgm11q000061ca312mdg99","_id":"ckwkgm11s000161cacfxfd2gp"},{"post_id":"ckwkb66ns0000w2caavau8bsm","tag_id":"ckwkgm11y000361cafqca0euk","_id":"ckwkgm120000661ca2cb20g0a"},{"post_id":"ckwk1mq2a0003wdcah3z8a8tz","tag_id":"ckwkgm120000561ca56y8e9mz","_id":"ckwkgm121000961cad8dq1ue3"},{"post_id":"ckwk1mq2o000gwdcafcox5ya1","tag_id":"ckwkgm120000861ca1fxc7d7b","_id":"ckwkgm121000b61ca3rzqahgr"}],"Tag":[{"name":"理财","_id":"ckwk1mq2e0005wdcah3874qme"},{"name":"音乐","_id":"ckwk1mq2j0009wdca8vaj9p6v"},{"name":"吉他","_id":"ckwk1mq2l000cwdcag4ba267t"},{"name":"基本技巧","_id":"ckwk1mq2p000iwdca99x92m0e"},{"name":"游戏","_id":"ckwkb66nz0002w2caeypj25ba"},{"name":"理財","_id":"ckwkgm11q000061ca312mdg99"},{"name":"遊戲","_id":"ckwkgm11y000361cafqca0euk"},{"name":"音樂","_id":"ckwkgm120000561ca56y8e9mz"},{"name":"程序員技術","_id":"ckwkgm120000861ca1fxc7d7b"}]}}